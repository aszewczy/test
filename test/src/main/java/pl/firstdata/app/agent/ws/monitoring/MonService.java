
/*
 * 
 */

package pl.firstdata.app.agent.ws.monitoring;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.9
 * Tue Aug 27 14:58:33 CEST 2019
 * Generated source version: 2.2.9
 * 
 */


@WebServiceClient(name = "MonService", 
                  wsdlLocation = "file:Monitoring.wsdl",
                  targetNamespace = "http://www.hp.com/mobicore/services/mon") 
public class MonService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://www.hp.com/mobicore/services/mon", "MonService");
    public final static QName Mon = new QName("http://www.hp.com/mobicore/services/mon", "Mon");
    static {
        URL url = null;
        try {
            url = new URL("file:Monitoring.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:Monitoring.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public MonService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MonService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MonService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public MonService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }
    public MonService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public MonService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns Mon
     */
    @WebEndpoint(name = "Mon")
    public Mon getMon() {
        return super.getPort(Mon, Mon.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Mon
     */
    @WebEndpoint(name = "Mon")
    public Mon getMon(WebServiceFeature... features) {
        return super.getPort(Mon, Mon.class, features);
    }

}
